{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Alert.js","services/persons.js","App.js","index.js"],"names":["Filter","props","className","id","onChange","handleFilterChange","value","placeholder","PersonForm","onSubmit","handleSubmit","htmlFor","handleNameChange","nameValue","handleNumberChange","numberValue","type","Person","name","number","data-id","onClick","handleClick","Persons","persons","personsList","map","person","key","Alert","timeoutFunc","message","alertTypes","error","success","info","Error","removeAlert","useEffect","setTimeout","baseUrl","newPerson","axios","post","then","response","data","get","put","delete","random","uniqueRandom","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","alerts","setAlerts","personsService","initialPersons","filteredPersons","filter","toLowerCase","includes","handleChange","event","target","resetPersonForm","preventDefault","some","p","find","window","confirm","updatedPerson","returnedPerson","queueAlert","catch","Promise","resolve","attemptPersonUpdate","wasUpdated","console","log","concat","errorMessages","messages","length","m","handleCreateErrors","finally","dataset","Number","isNaN","deleted","err","removePersonWithId","newAlerts","a","alertsWithTimeout","alertList","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f9cf39d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = (props) => {\n  return (\n    <div className=\"c-filter\">\n      <h3 className=\"c-filter__heading\">Search Contacts</h3>\n      <div className=\"c-form-row\">\n        <input\n          id=\"filter\"\n          className=\"c-form-row__input\"\n          onChange={props.handleFilterChange}\n          value={props.value}\n          placeholder=\"Enter name...\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form className=\"c-person-form\" onSubmit={props.handleSubmit}>\n        <h3 className=\"c-person-form__heading\">Add a New Contact</h3>\n        <div className={\"c-form-row\"}>\n          <label htmlFor=\"name\" className=\"c-form-row__label\">\n            Name:\n          </label>\n          <input\n            id=\"name\"\n            className=\"c-form-row__input\"\n            onChange={props.handleNameChange}\n            value={props.nameValue}\n          />\n        </div>\n        <div className=\"c-form-row\">\n          <label htmlFor=\"number\" className=\"c-form-row__label\">\n            Number:\n          </label>\n          <input\n            id=\"number\"\n            className=\"c-form-row__input\"\n            onChange={props.handleNumberChange}\n            value={props.numberValue}\n          />\n        </div>\n        <div className=\"c-person-form__submit\">\n          <button className=\"c-btn\" type=\"submit\">\n            Add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = (props) => {\n  return (\n    <div className=\"c-person\">\n      <span className=\"c-person__detail\">\n        <span className=\"u-bold\">{props.name}:</span>\n      </span>\n      <span className=\"c-person__detail\">\n        <span className=\"u-italic\">{props.number}, </span>\n      </span>\n      <div className=\"c-person__delete\">\n        <div className=\"c-person__delete-btn\">\n          <button\n            className=\"c-btn c-btn--danger\"\n            data-id={props.id}\n            onClick={props.handleClick}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Persons = ({ persons, handleClick }) => {\n  const personsList = persons.map((person) => {\n    return (\n      <Person\n        key={person.id}\n        id={person.id}\n        name={person.name}\n        number={person.number}\n        handleClick={handleClick}\n      />\n    );\n  });\n\n  return (\n    <div className=\"c-persons\">\n      <h3 className=\"c-persons__heading\">Contact List</h3>\n      {personsList}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React, { useEffect } from \"react\";\n\n//  run the timeoutFunc after a given period with useEffect hook\nconst Alert = ({ timeoutFunc, id, type, message }) => {\n  const alertTypes = {\n    error: \"c-alert--error\",\n    success: \"c-alert--success\",\n    info: \"c-alert--info\",\n  };\n\n  if (!alertTypes[type]) throw new Error(\"Invalid Alert Type\");\n\n  const removeAlert = () => timeoutFunc(id);\n\n  useEffect(() => {\n    setTimeout(removeAlert, 3000);\n  });\n\n  return (\n    <div className={`c-alert ${alertTypes[type]}`}>\n      <span className=\"c-alert__txt\">{message}</span>\n    </div>\n  );\n};\n\nexport default Alert;\n","import axios from \"axios\";\n\nconst baseUrl = \"api/persons\";\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n\n  return request.then((response) => response.data);\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\n\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n\n  return request;\n};\n\nexport default { create, getAll, update, remove };\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Alert from \"./components/Alert\";\nimport personsService from \"./services/persons\";\nimport uniqueRandom from \"unique-random\";\n\nconst random = uniqueRandom(1, 10000);\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [alerts, setAlerts] = useState([]);\n\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const filteredPersons = persons.filter((person) => {\n    return person.name.toLowerCase().includes(nameFilter.toLowerCase());\n  });\n\n  const handleChange = (event, type) => {\n    switch (type) {\n      case \"nameFilter\":\n        setNameFilter(event.target.value);\n        break;\n      case \"name\":\n        setNewName(event.target.value);\n        break;\n      case \"number\":\n        setNewNumber(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const resetPersonForm = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const createNewPerson = () => {\n    const person = {\n      name: newName,\n      number: newNumber,\n    };\n\n    return person;\n  };\n\n  // Attempt to create a new person and return true or false depending on user\n  const attemptPersonUpdate = () => {\n    const person = persons.find((p) => p.name === newName);\n    const willUpdate = window.confirm(\n      `${person.name} is alrady added to the phonebook, ` +\n        \"replace the old number with a new one?\"\n    );\n\n    if (willUpdate) {\n      const updatedPerson = { ...person, number: newNumber };\n      const id = person.id;\n      return personsService\n        .update(id, updatedPerson)\n        .then((returnedPerson) => {\n          setPersons(persons.map((p) => (p.id !== id ? p : returnedPerson)));\n          queueAlert([\n            {\n              type: `info`,\n              message: `${returnedPerson.name}'s number updated to ${returnedPerson.number}`,\n            },\n          ]);\n          return true;\n        })\n        .catch((error) => {\n          queueAlert([\n            {\n              type: `error`,\n              message: `Contact \"${person.name}\" has already been removed from server`,\n            },\n          ]);\n          setPersons(persons.filter((p) => p.id !== id));\n        });\n    } else {\n      return Promise.resolve(false);\n    }\n  };\n\n  // handle errors associated with adding a new person\n  const handleCreateErrors = (error) => {\n    // const statusCode = error.response.status;\n    const errorMessages = error.response.data.messages;\n\n    if (errorMessages.length > 0) {\n      const alerts = errorMessages.map((m) => {\n        return {\n          type: \"error\",\n          message: m,\n        };\n      });\n\n      queueAlert(alerts);\n    } else {\n      throw error;\n    }\n  };\n\n  // handle submit events (PersonForm component)\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const nameExists = persons.some((p) => p.name === newName);\n\n    if (nameExists) {\n      attemptPersonUpdate().then((wasUpdated) => {\n        if (wasUpdated) console.log(\"Person Updated Successfully\");\n        else if (!wasUpdated) console.log(\"User Opted Not To Update Person\");\n        resetPersonForm();\n      });\n    } else {\n      const person = createNewPerson();\n      personsService\n        .create(person)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          queueAlert([\n            {\n              type: `success`,\n              message: `Added \"${returnedPerson.name}\"`,\n            },\n          ]);\n        })\n        .catch((error) => {\n          handleCreateErrors(error);\n        })\n        .finally(() => resetPersonForm());\n    }\n  };\n\n  // Attempt to remove a person with specified id, include basic error logging\n  const removePersonWithId = (id) => {\n    let deleted = true;\n\n    personsService\n      .remove(id)\n      .catch((err) => {\n        console.log(err);\n        deleted = false;\n      })\n      .finally(() => {\n        if (deleted) {\n          setPersons(persons.filter((p) => p.id !== id));\n        }\n      });\n  };\n\n  // Handle click events based on component concern type\n  const handleClick = (event, type) => {\n    switch (type) {\n      case \"deletePerson\":\n        const id = event.target.dataset.id;\n        if (Number.isNaN(id) || !id) break;\n        const person = persons.find((p) => p.id === id);\n        const willDelete = window.confirm(`Delete ${person.name}?`);\n        if (willDelete) {\n          removePersonWithId(id);\n          queueAlert([\n            {\n              type: `info`,\n              message: `Removed \"${person.name}\" from contact list`,\n            },\n          ]);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Map an array of alerts to a format usable by Alert Component\n   *\n   * @param {Object[]} newAlerts - An array of alerts to be transformed\n   * @param {string} newAlerts[].type - \"info\" or \"error\" or \"success\"\n   * @param {string} newAlerts[].message - The alert message\n   */\n  const queueAlert = (newAlerts) => {\n    const timeoutFunc = (id) =>\n      setAlerts((alerts) => alerts.filter((a) => a.id !== id));\n\n    const alertsWithTimeout = newAlerts.map((a) => {\n      return { ...a, id: `${a.type}-${random()}`, timeoutFunc: timeoutFunc };\n    });\n\n    setAlerts([...alerts, ...alertsWithTimeout]);\n  };\n\n  // display all queued alerts\n  const alertList = alerts.map((alert) => {\n    return (\n      <Alert\n        timeoutFunc={alert.timeoutFunc}\n        key={alert.id}\n        id={alert.id}\n        type={alert.type}\n        message={alert.message}\n      ></Alert>\n    );\n  });\n\n  return (\n    <div className=\"o-wrapper\">\n      <h2>Phonebook</h2>\n\n      {alertList}\n\n      <PersonForm\n        nameValue={newName}\n        numberValue={newNumber}\n        handleSubmit={(event) => handleSubmit(event)}\n        handleNameChange={(event) => handleChange(event, \"name\")}\n        handleNumberChange={(event) => handleChange(event, \"number\")}\n      />\n\n      <Filter\n        handleFilterChange={(event) => handleChange(event, \"nameFilter\")}\n        value={nameFilter}\n      />\n\n      <Persons\n        persons={filteredPersons}\n        handleClick={(event) => handleClick(event, \"deletePerson\")}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}